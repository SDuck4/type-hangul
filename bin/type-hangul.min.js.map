{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///external \"Hangul\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DEFAULT_OPTIONS","text","append","intervalType","humanize","_type","target","options","_getText","textProcess","disassembled","run","charProcess","length","concat","push","_process","idxRun","idxType","lastType","progress","getIntervalType","number","ratio","min","max","Math","round","random","_humanize","Error","dispatchEvent","CustomEvent","detail","doType","setTimeout","typing","a","slice","typeChar","nodeName","textContent","_setText","TypeHangul","type","selector","document","querySelectorAll","window","Hangul"],"mappings":"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","file":"type-hangul.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * type-hangul\r\n * https://github.com/SDuck4/type-hangul\r\n *\r\n * MIT License\r\n * Copyright (c) 2020 Chae SeungWoo\r\n */\r\n\r\nimport { a, d } from \"hangul-js\";\r\n\r\nexport interface Options {\r\n\ttext?: string | null;\r\n\tappend?: boolean;\r\n\tintervalType?: number;\r\n\thumanize?: number | Function | null;\r\n}\r\n\r\n// 기본 옵션\r\nconst DEFAULT_OPTIONS: Options = {\r\n\t// 출력할 텍스트\r\n\ttext: null,\r\n\r\n\t// 기존 텍스트 뒤에 이어서 출력할 지 여부\r\n\tappend: false,\r\n\r\n\t// 타이핑 사이 시간 간격, ms\r\n\tintervalType: 120,\r\n\r\n\t// 사람이 타이핑하는 것처럼 intervalType를 랜덤화\r\n\thumanize: null\r\n};\r\n\r\n// text가 타이핑되는 과정을 반환함\r\nfunction _process(text: string) {\r\n\t// Hangul로 text의 자모음 분리\r\n\tconst disassembled = d(text, true);\r\n\r\n\t// 타이핑 run 합치기\r\n\t// run: 연속적으로 타이핑 되는 구간\r\n\tlet textProcess: string[][] = [],\r\n\t\trun: string[] = [];\r\n\tfor (let i in disassembled) {\r\n\t\tconst charProcess = disassembled[i];\r\n\t\tif (charProcess.length > 1) run = run.concat(charProcess);\r\n\t\telse {\r\n\t\t\tif (run.length > 0) {\r\n\t\t\t\ttextProcess.push(run);\r\n\t\t\t\trun = [];\r\n\t\t\t}\r\n\t\t\ttextProcess.push(charProcess);\r\n\t\t}\r\n\t}\r\n\tif (run.length > 0) textProcess.push(run);\r\n\r\n\treturn textProcess;\r\n}\r\n\r\n// text가 타이핑되는 과정을 selector로 선택한 DOM의 텍스트로 출력함\r\nfunction _type(target: Element, options: Options) {\r\n\t// 기본 옵션 적용\r\n\toptions = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n\t// text가 정의되지 않은 경우, target의 내용을 text로 설정\r\n\tif (!options.text) options.text = _getText(target);\r\n\r\n\tlet text = options.text,\r\n\t\t// 타이핑 관련 변수들\r\n\t\ttextProcess = _process(text),\r\n\t\tidxRun = 0,\r\n\t\tidxType = 0,\r\n\t\tintervalType: number,\r\n\t\tlastType = options.append ? _getText(target) : \"\",\r\n\t\tprogress = lastType;\r\n\r\n\t// intervalType 계산 함수\r\n\tfunction getIntervalType(): number {\r\n\t\tif (options.humanize === null) return options.intervalType!;\r\n\r\n\t\tif (typeof options.humanize === \"number\")\r\n\t\t\treturn _humanize(options.intervalType!, options.humanize);\r\n\r\n\t\tif (typeof options.humanize === \"function\")\r\n\t\t\treturn options.humanize(options.intervalType);\r\n\r\n\t\tthrow new Error(\"'humanize' cannnot be \" + typeof options.humanize);\r\n\t}\r\n\r\n\t// 타이핑 인터벌 함수\r\n\tfunction doType() {\r\n\t\t// run: 연속적으로 타이핑 되는 구간\r\n\t\tconst run = textProcess[idxRun];\r\n\r\n\t\t// run 타이핑 완료\r\n\t\tif (idxType >= run.length) {\r\n\t\t\tidxRun++;\r\n\t\t\tidxType = 0;\r\n\t\t\tlastType = _getText(target);\r\n\r\n\t\t\t// text 타이핑 완료\r\n\t\t\tif (idxRun >= textProcess.length) {\r\n\t\t\t\ttarget.dispatchEvent(\r\n\t\t\t\t\tnew CustomEvent(\"th.endType\", {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\t\toptions\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tintervalType = getIntervalType();\r\n\t\t\tsetTimeout(doType, intervalType);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 타이핑 과정 출력\r\n\t\tconst typing = a(run.slice(0, idxType + 1)),\r\n\t\t\ttypeChar = run[idxType];\r\n\r\n\t\ttarget.dispatchEvent(\r\n\t\t\tnew CustomEvent(\"th.beforeType\", {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\ttarget,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\tprogress,\r\n\t\t\t\t\ttypeChar\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tprogress = lastType + typing;\r\n\t\t_setText(target, progress);\r\n\t\tidxType++;\r\n\r\n\t\ttarget.dispatchEvent(\r\n\t\t\tnew CustomEvent(\"th.afterType\", {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\ttarget,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\tprogress,\r\n\t\t\t\t\ttypeChar\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tintervalType = getIntervalType();\r\n\t\tsetTimeout(doType, intervalType);\r\n\t}\r\n\r\n\t// 타이핑 인터벌 시작\r\n\ttarget.dispatchEvent(\r\n\t\tnew CustomEvent(\"th.startType\", {\r\n\t\t\tdetail: {\r\n\t\t\t\ttarget,\r\n\t\t\t\toptions\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n\tdoType();\r\n}\r\n\r\n// target DOM의 텍스트를 반환\r\nfunction _getText(target: Element) {\r\n\treturn target.nodeName === \"INPUT\"\r\n\t\t? (target as HTMLInputElement).value\r\n\t\t: target.textContent!;\r\n}\r\n\r\n// target DOM에 텍스트를 text로 설정\r\nfunction _setText(target: Element, text: string) {\r\n\tif (target.nodeName === \"INPUT\") (target as HTMLInputElement).value = text;\r\n\telse target.textContent = text;\r\n}\r\n\r\n// 기본 humanize 함수, number를 ratio 비율로 랜덤화해서 반환\r\nfunction _humanize(number: number, ratio: number) {\r\n\tconst min = number - number * ratio,\r\n\t\tmax = number + number * ratio;\r\n\treturn Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\nconst TypeHangul = {\r\n\ttype: (selector: string, options: Options) => {\r\n\t\t// selector 필수 입력\r\n\t\tif (!selector) throw new Error(\"'selector' must be defined.\");\r\n\r\n\t\t// 출력 대상 DOM\r\n\t\tconst target = document.querySelectorAll(selector);\r\n\t\tfor (let i = 0; i < target.length; i++) _type(target[i], options);\r\n\t}\r\n};\r\n\r\n(window as any).TypeHangul = TypeHangul;\r\nexport default TypeHangul;\r\n","module.exports = Hangul;"],"sourceRoot":""}