{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts","webpack:///./node_modules/hangul-js/hangul.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DEFAULT_OPTIONS","text","append","intervalType","humanize","_type","target","options","_getText","textProcess","disassembled","run","charProcess","length","concat","push","_process","idxRun","idxType","lastType","progress","getIntervalType","number","ratio","min","max","Math","round","random","_humanize","Error","dispatchEvent","CustomEvent","detail","doType","setTimeout","typing","a","slice","typeChar","nodeName","textContent","_setText","TypeHangul","type","selector","document","querySelectorAll","window","CONSONANTS_HASH","CHO_HASH","JUNG_HASH","JONG_HASH","COMPLEX_CONSONANTS_HASH","COMPLEX_VOWELS_HASH","CHO","JUNG","JONG","_makeHash","array","hash","0","charCodeAt","_makeComplexHash","code1","code2","_isConsonant","_isCho","_isJung","_isJong","_isHangul","_isJungJoinable","b","_isJongJoinable","disassemble","string","grouped","join","cho","jung","jong","code","result","temp","parseInt","charAt","disassembleToString","str","assemble","previous_code","stage","complete_index","jong_joined","_makeHangul","index","jung1","jung2","jong2","jong1","hangul","step","String","fromCharCode","Searcher","this","search","indexOf","ds","ad","bd","rangeSearch","haystack","needle","hex","nex","re","RegExp","indices","exec","findStart","findEnd","map","endsWithConsonant","endsWith","pop","isHangul","isComplete","isConsonant","isVowel","isCho","isJong","isHangulAll","isCompleteAll","isConsonantAll","isVowelAll","isChoAll","isJongAll"],"mappings":"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","file":"type-hangul.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * type-hangul\r\n * https://github.com/SDuck4/type-hangul\r\n *\r\n * MIT License\r\n * Copyright (c) 2020 Chae SeungWoo\r\n */\r\n\r\nimport { a, d } from \"hangul-js\";\r\n\r\nexport interface Options {\r\n\ttext?: string | null;\r\n\tappend?: boolean;\r\n\tintervalType?: number;\r\n\thumanize?: number | Function | null;\r\n}\r\n\r\n// 기본 옵션\r\nconst DEFAULT_OPTIONS: Options = {\r\n\t// 출력할 텍스트\r\n\ttext: null,\r\n\r\n\t// 기존 텍스트 뒤에 이어서 출력할 지 여부\r\n\tappend: false,\r\n\r\n\t// 타이핑 사이 시간 간격, ms\r\n\tintervalType: 120,\r\n\r\n\t// 사람이 타이핑하는 것처럼 intervalType를 랜덤화\r\n\thumanize: null\r\n};\r\n\r\n// text가 타이핑되는 과정을 반환함\r\nfunction _process(text: string) {\r\n\t// Hangul로 text의 자모음 분리\r\n\tconst disassembled = d(text, true);\r\n\r\n\t// 타이핑 run 합치기\r\n\t// run: 연속적으로 타이핑 되는 구간\r\n\tlet textProcess: string[][] = [],\r\n\t\trun: string[] = [];\r\n\tfor (let i in disassembled) {\r\n\t\tconst charProcess = disassembled[i];\r\n\t\tif (charProcess.length > 1) run = run.concat(charProcess);\r\n\t\telse {\r\n\t\t\tif (run.length > 0) {\r\n\t\t\t\ttextProcess.push(run);\r\n\t\t\t\trun = [];\r\n\t\t\t}\r\n\t\t\ttextProcess.push(charProcess);\r\n\t\t}\r\n\t}\r\n\tif (run.length > 0) textProcess.push(run);\r\n\r\n\treturn textProcess;\r\n}\r\n\r\n// text가 타이핑되는 과정을 selector로 선택한 DOM의 텍스트로 출력함\r\nfunction _type(target: Element, options: Options) {\r\n\t// 기본 옵션 적용\r\n\toptions = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n\t// text가 정의되지 않은 경우, target의 내용을 text로 설정\r\n\tif (!options.text) options.text = _getText(target);\r\n\r\n\tlet text = options.text,\r\n\t\t// 타이핑 관련 변수들\r\n\t\ttextProcess = _process(text),\r\n\t\tidxRun = 0,\r\n\t\tidxType = 0,\r\n\t\tintervalType: number,\r\n\t\tlastType = options.append ? _getText(target) : \"\",\r\n\t\tprogress = lastType;\r\n\r\n\t// intervalType 계산 함수\r\n\tfunction getIntervalType(): number {\r\n\t\tif (options.humanize === null) return options.intervalType!;\r\n\r\n\t\tif (typeof options.humanize === \"number\")\r\n\t\t\treturn _humanize(options.intervalType!, options.humanize);\r\n\r\n\t\tif (typeof options.humanize === \"function\")\r\n\t\t\treturn options.humanize(options.intervalType);\r\n\r\n\t\tthrow new Error(\"'humanize' cannnot be \" + typeof options.humanize);\r\n\t}\r\n\r\n\t// 타이핑 인터벌 함수\r\n\tfunction doType() {\r\n\t\t// run: 연속적으로 타이핑 되는 구간\r\n\t\tconst run = textProcess[idxRun];\r\n\r\n\t\t// run 타이핑 완료\r\n\t\tif (idxType >= run.length) {\r\n\t\t\tidxRun++;\r\n\t\t\tidxType = 0;\r\n\t\t\tlastType = _getText(target);\r\n\r\n\t\t\t// text 타이핑 완료\r\n\t\t\tif (idxRun >= textProcess.length) {\r\n\t\t\t\ttarget.dispatchEvent(\r\n\t\t\t\t\tnew CustomEvent(\"th.endType\", {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\ttarget,\r\n\t\t\t\t\t\t\toptions\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (run.length === 1) {\r\n\t\t\t\tdoType();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tintervalType = getIntervalType();\r\n\t\t\tsetTimeout(doType, intervalType);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 타이핑 과정 출력\r\n\t\tconst typing = a(run.slice(0, idxType + 1)),\r\n\t\t\ttypeChar = run[idxType];\r\n\r\n\t\ttarget.dispatchEvent(\r\n\t\t\tnew CustomEvent(\"th.beforeType\", {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\ttarget,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\tprogress,\r\n\t\t\t\t\ttypeChar\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tprogress = lastType + typing;\r\n\t\t_setText(target, progress);\r\n\t\tidxType++;\r\n\r\n\t\ttarget.dispatchEvent(\r\n\t\t\tnew CustomEvent(\"th.afterType\", {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\ttarget,\r\n\t\t\t\t\toptions,\r\n\t\t\t\t\tprogress,\r\n\t\t\t\t\ttypeChar\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tintervalType = getIntervalType();\r\n\t\tsetTimeout(doType, intervalType);\r\n\t}\r\n\r\n\t// 타이핑 인터벌 시작\r\n\ttarget.dispatchEvent(\r\n\t\tnew CustomEvent(\"th.startType\", {\r\n\t\t\tdetail: {\r\n\t\t\t\ttarget,\r\n\t\t\t\toptions\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n\tdoType();\r\n}\r\n\r\n// target DOM의 텍스트를 반환\r\nfunction _getText(target: Element) {\r\n\treturn target.nodeName === \"INPUT\"\r\n\t\t? (target as HTMLInputElement).value\r\n\t\t: target.textContent!;\r\n}\r\n\r\n// target DOM에 텍스트를 text로 설정\r\nfunction _setText(target: Element, text: string) {\r\n\tif (target.nodeName === \"INPUT\") (target as HTMLInputElement).value = text;\r\n\telse target.textContent = text;\r\n}\r\n\r\n// 기본 humanize 함수, number를 ratio 비율로 랜덤화해서 반환\r\nfunction _humanize(number: number, ratio: number) {\r\n\tconst min = number - number * ratio,\r\n\t\tmax = number + number * ratio;\r\n\treturn Math.round(Math.random() * (max - min) + min);\r\n}\r\n\r\nconst TypeHangul = {\r\n\ttype: (selector: string, options: Options) => {\r\n\t\t// selector 필수 입력\r\n\t\tif (!selector) throw new Error(\"'selector' must be defined.\");\r\n\r\n\t\t// 출력 대상 DOM\r\n\t\tconst target = document.querySelectorAll(selector);\r\n\t\tfor (let i = 0; i < target.length; i++) _type(target[i], options);\r\n\t}\r\n};\r\n\r\n(window as any).TypeHangul = TypeHangul;\r\nexport default TypeHangul;\r\n","/**\r\n * Hangul.js\r\n * https://github.com/e-/Hangul.js\r\n *\r\n * Copyright 2017, Jaemin Jo\r\n * under the MIT license.\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n    var CHO = [\r\n        'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ',\r\n        'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ',\r\n        'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ',\r\n        'ㅍ', 'ㅎ'\r\n    ],\r\n        JUNG = [\r\n            'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ',\r\n            'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', ['ㅗ', 'ㅏ'], ['ㅗ', 'ㅐ'],\r\n            ['ㅗ', 'ㅣ'], 'ㅛ', 'ㅜ', ['ㅜ', 'ㅓ'], ['ㅜ', 'ㅔ'], ['ㅜ', 'ㅣ'],\r\n            'ㅠ', 'ㅡ', ['ㅡ', 'ㅣ'], 'ㅣ'\r\n        ],\r\n        JONG = [\r\n            '', 'ㄱ', 'ㄲ', ['ㄱ', 'ㅅ'], 'ㄴ', ['ㄴ', 'ㅈ'], ['ㄴ', 'ㅎ'], 'ㄷ', 'ㄹ',\r\n            ['ㄹ', 'ㄱ'], ['ㄹ', 'ㅁ'], ['ㄹ', 'ㅂ'], ['ㄹ', 'ㅅ'], ['ㄹ', 'ㅌ'], ['ㄹ', 'ㅍ'], ['ㄹ', 'ㅎ'], 'ㅁ',\r\n            'ㅂ', ['ㅂ', 'ㅅ'], 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        HANGUL_OFFSET = 0xAC00,\r\n        CONSONANTS = [\r\n            'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄸ',\r\n            'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ',\r\n            'ㅁ', 'ㅂ', 'ㅃ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ',\r\n            'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLETE_CHO = [\r\n            'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ',\r\n            'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ',\r\n            'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLETE_JUNG = [\r\n            'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ',\r\n            'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ',\r\n            'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ',\r\n            'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'\r\n        ],\r\n        COMPLETE_JONG = [\r\n            '', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ',\r\n            'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ',\r\n            'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLEX_CONSONANTS = [\r\n            ['ㄱ', 'ㅅ', 'ㄳ'],\r\n            ['ㄴ', 'ㅈ', 'ㄵ'],\r\n            ['ㄴ', 'ㅎ', 'ㄶ'],\r\n            ['ㄹ', 'ㄱ', 'ㄺ'],\r\n            ['ㄹ', 'ㅁ', 'ㄻ'],\r\n            ['ㄹ', 'ㅂ', 'ㄼ'],\r\n            ['ㄹ', 'ㅅ', 'ㄽ'],\r\n            ['ㄹ', 'ㅌ', 'ㄾ'],\r\n            ['ㄹ', 'ㅍ', 'ㄿ'],\r\n            ['ㄹ', 'ㅎ', 'ㅀ'],\r\n            ['ㅂ', 'ㅅ', 'ㅄ']\r\n        ],\r\n        COMPLEX_VOWELS = [\r\n            ['ㅗ', 'ㅏ', 'ㅘ'],\r\n            ['ㅗ', 'ㅐ', 'ㅙ'],\r\n            ['ㅗ', 'ㅣ', 'ㅚ'],\r\n            ['ㅜ', 'ㅓ', 'ㅝ'],\r\n            ['ㅜ', 'ㅔ', 'ㅞ'],\r\n            ['ㅜ', 'ㅣ', 'ㅟ'],\r\n            ['ㅡ', 'ㅣ', 'ㅢ']\r\n        ],\r\n        CONSONANTS_HASH,\r\n        CHO_HASH,\r\n        JUNG_HASH,\r\n        JONG_HASH,\r\n        COMPLEX_CONSONANTS_HASH,\r\n        COMPLEX_VOWELS_HASH\r\n        ;\r\n\r\n    function _makeHash(array) {\r\n        var length = array.length,\r\n            hash = { 0: 0 }\r\n            ;\r\n        for (var i = 0; i < length; i++) {\r\n            if (array[i])\r\n                hash[array[i].charCodeAt(0)] = i;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    CONSONANTS_HASH = _makeHash(CONSONANTS);\r\n    CHO_HASH = _makeHash(COMPLETE_CHO);\r\n    JUNG_HASH = _makeHash(COMPLETE_JUNG);\r\n    JONG_HASH = _makeHash(COMPLETE_JONG);\r\n\r\n    function _makeComplexHash(array) {\r\n        var length = array.length,\r\n            hash = {},\r\n            code1,\r\n            code2\r\n            ;\r\n        for (var i = 0; i < length; i++) {\r\n            code1 = array[i][0].charCodeAt(0);\r\n            code2 = array[i][1].charCodeAt(0);\r\n            if (typeof hash[code1] === 'undefined') {\r\n                hash[code1] = {};\r\n            }\r\n            hash[code1][code2] = array[i][2].charCodeAt(0);\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    COMPLEX_CONSONANTS_HASH = _makeComplexHash(COMPLEX_CONSONANTS);\r\n    COMPLEX_VOWELS_HASH = _makeComplexHash(COMPLEX_VOWELS);\r\n\r\n    function _isConsonant(c) {\r\n        return typeof CONSONANTS_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isCho(c) {\r\n        return typeof CHO_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isJung(c) {\r\n        return typeof JUNG_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isJong(c) {\r\n        return typeof JONG_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isHangul(c /* code number */) {\r\n        return 0xAC00 <= c && c <= 0xd7a3;\r\n    }\r\n\r\n    function _isJungJoinable(a, b) {\r\n        return (COMPLEX_VOWELS_HASH[a] && COMPLEX_VOWELS_HASH[a][b]) ? COMPLEX_VOWELS_HASH[a][b] : false;\r\n    }\r\n\r\n    function _isJongJoinable(a, b) {\r\n        return COMPLEX_CONSONANTS_HASH[a] && COMPLEX_CONSONANTS_HASH[a][b] ? COMPLEX_CONSONANTS_HASH[a][b] : false;\r\n    }\r\n\r\n    var disassemble = function (string, grouped) {\r\n        if (string === null) {\r\n            throw new Error('Arguments cannot be null');\r\n        }\r\n\r\n        if (typeof string === 'object') {\r\n            string = string.join('');\r\n        }\r\n\r\n        var result = [],\r\n            length = string.length,\r\n            cho,\r\n            jung,\r\n            jong,\r\n            code,\r\n            r\r\n            ;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            var temp = [];\r\n\r\n            code = string.charCodeAt(i);\r\n            if (_isHangul(code)) { // 완성된 한글이면\r\n                code -= HANGUL_OFFSET;\r\n                jong = code % 28;\r\n                jung = (code - jong) / 28 % 21;\r\n                cho = parseInt((code - jong) / 28 / 21);\r\n                temp.push(CHO[cho]);\r\n                if (typeof JUNG[jung] === 'object') {\r\n                    temp = temp.concat(JUNG[jung]);\r\n                } else {\r\n                    temp.push(JUNG[jung]);\r\n                }\r\n                if (jong > 0) {\r\n                    if (typeof JONG[jong] === 'object') {\r\n                        temp = temp.concat(JONG[jong]);\r\n                    } else {\r\n                        temp.push(JONG[jong]);\r\n                    }\r\n                }\r\n            } else if (_isConsonant(code)) { //자음이면\r\n                if (_isCho(code)) {\r\n                    r = CHO[CHO_HASH[code]];\r\n                } else {\r\n                    r = JONG[JONG_HASH[code]];\r\n                }\r\n                if (typeof r === 'string') {\r\n                    temp.push(r);\r\n                } else {\r\n                    temp = temp.concat(r);\r\n                }\r\n            } else if (_isJung(code)) {\r\n                r = JUNG[JUNG_HASH[code]];\r\n                if (typeof r === 'string') {\r\n                    temp.push(r);\r\n                } else {\r\n                    temp = temp.concat(r);\r\n                }\r\n            } else {\r\n                temp.push(string.charAt(i));\r\n            }\r\n\r\n            if (grouped) result.push(temp);\r\n            else result = result.concat(temp);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var disassembleToString = function (str) {\r\n        if (typeof str !== 'string') {\r\n            return '';\r\n        }\r\n        str = disassemble(str);\r\n        return str.join('');\r\n    };\r\n\r\n    var assemble = function (array) {\r\n        if (typeof array === 'string') {\r\n            array = disassemble(array);\r\n        }\r\n\r\n        var result = [],\r\n            length = array.length,\r\n            code,\r\n            stage = 0,\r\n            complete_index = -1, //완성된 곳의 인덱스\r\n            previous_code,\r\n            jong_joined = false\r\n            ;\r\n\r\n        function _makeHangul(index) { // complete_index + 1부터 index까지를 greedy하게 한글로 만든다.\r\n            var code,\r\n                cho,\r\n                jung1,\r\n                jung2,\r\n                jong1 = 0,\r\n                jong2,\r\n                hangul = ''\r\n                ;\r\n\r\n            jong_joined = false;\r\n            if (complete_index + 1 > index) {\r\n                return;\r\n            }\r\n            for (var step = 1; ; step++) {\r\n                if (step === 1) {\r\n                    cho = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJung(cho)) { // 첫번째 것이 모음이면 1) ㅏ같은 경우이거나 2) ㅙ같은 경우이다\r\n                        if (complete_index + step + 1 <= index && _isJung(jung1 = array[complete_index + step + 1].charCodeAt(0))) { //다음것이 있고 모음이면\r\n                            result.push(String.fromCharCode(_isJungJoinable(cho, jung1)));\r\n                            complete_index = index;\r\n                            return;\r\n                        } else {\r\n                            result.push(array[complete_index + step]);\r\n                            complete_index = index;\r\n                            return;\r\n                        }\r\n                    } else if (!_isCho(cho)) {\r\n                        result.push(array[complete_index + step]);\r\n                        complete_index = index;\r\n                        return;\r\n                    }\r\n                    hangul = array[complete_index + step];\r\n                } else if (step === 2) {\r\n                    jung1 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isCho(jung1)) { //두번째 또 자음이 오면 ㄳ 에서 ㅅ같은 경우이다\r\n                        cho = _isJongJoinable(cho, jung1);\r\n                        hangul = String.fromCharCode(cho);\r\n                        result.push(hangul);\r\n                        complete_index = index;\r\n                        return;\r\n                    } else {\r\n                        hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + HANGUL_OFFSET);\r\n                    }\r\n                } else if (step === 3) {\r\n                    jung2 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJungJoinable(jung1, jung2)) {\r\n                        jung1 = _isJungJoinable(jung1, jung2);\r\n                    } else {\r\n                        jong1 = jung2;\r\n                    }\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                    \r\n                } else if (step === 4) {\r\n                    jong2 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJongJoinable(jong1, jong2)) {\r\n                        jong1 = _isJongJoinable(jong1, jong2);\r\n                    } else {\r\n                        jong1 = jong2;\r\n                    }\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                } else if (step === 5) {\r\n                    jong2 = array[complete_index + step].charCodeAt(0);\r\n                    jong1 = _isJongJoinable(jong1, jong2);\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                }\r\n\r\n                if (complete_index + step >= index) {\r\n                    result.push(hangul);\r\n                    complete_index = index;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            code = array[i].charCodeAt(0);\r\n            if (!_isCho(code) && !_isJung(code) && !_isJong(code)) { //초, 중, 종성 다 아니면\r\n                _makeHangul(i - 1);\r\n                _makeHangul(i);\r\n                stage = 0;\r\n                continue;\r\n            }\r\n            //console.log(stage, array[i]);\r\n            if (stage === 0) { // 초성이 올 차례\r\n                if (_isCho(code)) { // 초성이 오면 아무 문제 없다.\r\n                    stage = 1;\r\n                } else if (_isJung(code)) {\r\n                    // 중성이오면 ㅐ 또는 ㅘ 인것이다. 바로 구분을 못한다. 따라서 특수한 stage인 stage4로 이동\r\n                    stage = 4;\r\n                }\r\n            } else if (stage == 1) { //중성이 올 차례\r\n                if (_isJung(code)) { //중성이 오면 문제없음 진행.\r\n                    stage = 2;\r\n                } else { //아니고 자음이오면 ㄻ같은 경우가 있고 ㄹㅋ같은 경우가 있다.\r\n                    if (_isJongJoinable(previous_code, code)) {\r\n                        // 합쳐질 수 있다면 ㄻ 같은 경우인데 이 뒤에 모음이 와서 ㄹ마 가 될수도 있고 초성이 올 수도 있다. 따라서 섣불리 완성할 수 없다. 이땐 stage5로 간다.\r\n                        stage = 5;\r\n                    } else { //합쳐질 수 없다면 앞 글자 완성 후 여전히 중성이 올 차례\r\n                        _makeHangul(i - 1);\r\n                    }\r\n                }\r\n            } else if (stage == 2) { //종성이 올 차례\r\n                if (_isJong(code)) { //종성이 오면 다음엔 자음 또는 모음이 온다.\r\n                    stage = 3;\r\n                } else if (_isJung(code)) { //그런데 중성이 오면 앞의 모음과 합칠 수 있는지 본다.\r\n                    if (_isJungJoinable(previous_code, code)) { //합칠 수 있으면 여전히 종성이 올 차례고 그대로 진행\r\n                    } else { // 합칠 수 없다면 오타가 생긴 경우\r\n                        _makeHangul(i - 1);\r\n                        stage = 4;\r\n                    }\r\n                } else { // 받침이 안되는 자음이 오면 ㄸ 같은 이전까지 완성하고 다시시작\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            } else if (stage == 3) { // 종성이 하나 온 상태.\r\n                if (_isJong(code)) { // 또 종성이면 합칠수 있는지 본다.\r\n                    if (!jong_joined && _isJongJoinable(previous_code, code)) { //합칠 수 있으면 계속 진행. 왜냐하면 이번에 온 자음이 다음 글자의 초성이 될 수도 있기 때문. 대신 이 기회는 한번만\r\n                        jong_joined = true;\r\n                    } else { //없으면 한글자 완성\r\n                        _makeHangul(i - 1);\r\n                        stage = 1; // 이 종성이 초성이 되고 중성부터 시작\r\n                    }\r\n                } else if (_isCho(code)) { // 초성이면 한글자 완성.\r\n                    _makeHangul(i - 1);\r\n                    stage = 1; //이 글자가 초성이되므로 중성부터 시작\r\n                } else if (_isJung(code)) { // 중성이면 이전 종성은 이 중성과 합쳐지고 앞 글자는 받침이 없다.\r\n                    _makeHangul(i - 2);\r\n                    stage = 2;\r\n                }\r\n            } else if (stage == 4) { // 중성이 하나 온 상태\r\n                if (_isJung(code)) { //중성이 온 경우\r\n                    if (_isJungJoinable(previous_code, code)) { //이전 중성과 합쳐질 수 있는 경우\r\n                        _makeHangul(i);\r\n                        stage = 0;\r\n                    } else { //중성이 왔지만 못합치는 경우. ㅒㅗ 같은\r\n                        _makeHangul(i - 1);\r\n                    }\r\n                } else { // 아니면 자음이 온 경우.\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            } else if (stage == 5) { // 초성이 연속해서 두개 온 상태 ㄺ\r\n                if (_isJung(code)) { //이번에 중성이면 ㄹ가\r\n                    _makeHangul(i - 2);\r\n                    stage = 2;\r\n                } else {\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            }\r\n            previous_code = code;\r\n        }\r\n        _makeHangul(i - 1);\r\n        return result.join('');\r\n    };\r\n\r\n    var search = function (a, b) {\r\n        var ad = disassemble(a).join(''),\r\n            bd = disassemble(b).join('')\r\n            ;\r\n\r\n        return ad.indexOf(bd);\r\n    };\r\n\r\n    var rangeSearch = function (haystack, needle) {\r\n        var hex = disassemble(haystack).join(''),\r\n            nex = disassemble(needle).join(''),\r\n            grouped = disassemble(haystack, true),\r\n            re = new RegExp(nex, 'gi'),\r\n            indices = [],\r\n            result;\r\n\r\n        if (!needle.length) return [];\r\n\r\n        while ((result = re.exec(hex))) {\r\n            indices.push(result.index);\r\n        }\r\n\r\n        function findStart(index) {\r\n            for (var i = 0, length = 0; i < grouped.length; ++i) {\r\n                length += grouped[i].length;\r\n                if (index < length) return i;\r\n            }\r\n        }\r\n\r\n        function findEnd(index) {\r\n            for (var i = 0, length = 0; i < grouped.length; ++i) {\r\n                length += grouped[i].length;\r\n                if (index + nex.length <= length) return i;\r\n            }\r\n        }\r\n\r\n        return indices.map(function (i) {\r\n            return [findStart(i), findEnd(i)];\r\n        });\r\n    };\r\n\r\n    function Searcher(string) {\r\n        this.string = string;\r\n        this.disassembled = disassemble(string).join('');\r\n    }\r\n\r\n    Searcher.prototype.search = function (string) {\r\n        return disassemble(string).join('').indexOf(this.disassembled);\r\n    };\r\n    var endsWithConsonant = function (string) {\r\n        if (typeof string === 'object') {\r\n            string = string.join('');\r\n        }\r\n\r\n        var code = string.charCodeAt(string.length - 1);\r\n\r\n        if (_isHangul(code)) { // 완성된 한글이면\r\n            code -= HANGUL_OFFSET;\r\n            var jong = code % 28;\r\n            if (jong > 0) {\r\n                return true;\r\n            }\r\n        } else if (_isConsonant(code)) { //자음이면\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var endsWith = function (string, target) {\r\n        return disassemble(string).pop() === target;\r\n    };\r\n\r\n\r\n    var hangul = {\r\n        disassemble: disassemble,\r\n        d: disassemble, // alias for disassemble\r\n        disassembleToString: disassembleToString,\r\n        ds: disassembleToString, // alias for disassembleToString\r\n        assemble: assemble,\r\n        a: assemble, // alias for assemble\r\n        search: search,\r\n        rangeSearch: rangeSearch,\r\n        Searcher: Searcher,\r\n        endsWithConsonant: endsWithConsonant,\r\n        endsWith: endsWith,\r\n        isHangul: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isHangul(c);\r\n        },\r\n        isComplete: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isHangul(c);\r\n        },\r\n        isConsonant: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isConsonant(c);\r\n        },\r\n        isVowel: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isJung(c);\r\n        },\r\n        isCho: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isCho(c);\r\n        },\r\n        isJong: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isJong(c);\r\n        },\r\n        isHangulAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isHangul(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isCompleteAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isHangul(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isConsonantAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isConsonant(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isVowelAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isJung(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isChoAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isCho(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isJongAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isJong(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    if (typeof define == 'function' && define.amd) {\r\n        define(function () {\r\n            return hangul;\r\n        });\r\n    } else if (typeof module !== 'undefined') {\r\n        module.exports = hangul;\r\n    } else {\r\n        window.Hangul = hangul;\r\n    }\r\n})();\r\n\r\n"],"sourceRoot":""}